{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","components/GifGrid.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","src","alt","GrifGrid","category","images","setImages","useEffect","getGifs","a","fetch","resp","json","data","gifs","map","img","id","downsized_medium","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAiB5C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAIH,GAERH,EAAWO,OAAOC,OAAS,IAC3BV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAoBS,OACtCR,EAAc,MAKlB,SACI,uBACIS,KAAK,OACLC,MAAOX,EACPY,SAnBe,SAACT,GACxBF,EAAcE,EAAEU,OAAOF,a,+BCLlBG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEhC,OACI,gCACI,qBAAKC,IAAKD,EAAKE,IAAKH,IACpB,4BAAIA,QCFHI,EAAW,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EAERrB,mBAAS,IAFD,mBAE7BsB,EAF6B,KAErBC,EAFqB,KAIpCC,qBAAW,WACPC,MACD,IAEH,IAAMA,EAAO,uCAAG,kCAAAC,EAAA,4DACA,kGADA,SAEOC,MADP,mGADA,cAENC,EAFM,gBAGSA,EAAKC,OAHd,gBAGLC,EAHK,EAGLA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRlB,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIX,cAAN,aAAE,EAAYa,iBAAiBlB,QAG1CM,EAAUQ,GACVzB,QAAQC,IAAIwB,GAZA,4CAAH,qDAgBb,OACI,qCACI,6BAAKV,IAEGC,EAAOU,KAAI,SAAAC,GAAG,OAEV,cAAC,EAAD,eAEQA,GADCA,EAAIC,WChCxBE,EAAS,WAAO,IAAD,EACYpC,mBAAS,CAAC,gBADtB,mBACjBqC,EADiB,KACLtC,EADK,KAExB,OACI,qCACI,wCACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,yCACA,6BAEQsC,EAAWL,KAAI,SAAAX,GAAQ,OACvB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCX7BiB,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d3f82d51.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange =  (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        console.log(e)\r\n        \r\n        if (inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    return (\r\n        <div>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useEffect, useState} from 'react';\r\nimport {GifGridItem} from './GifGridItem'\r\n\r\n\r\nexport const GrifGrid = ({category}) => {\r\n    \r\n    const [images, setImages] = useState([])\r\n\r\n    useEffect( () => {\r\n        getGifs();\r\n    }, [])\r\n\r\n    const getGifs = async () => {\r\n        const url = 'https://api.giphy.com/v1/gifs/search?q=Naruto&limit=10&api_key=V0A6OAyez0wYN1iu4y6XbFe9Zqk1e12l'\r\n        const resp = await fetch (url);\r\n        const {data} = await resp.json();\r\n        const gifs = data.map(img =>{\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        setImages(gifs);\r\n        console.log(gifs)\r\n    \r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h3>{category}</h3>\r\n                {\r\n                    images.map(img =>\r\n                        (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    )\r\n                         \r\n                    )\r\n                }\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport {AddCategory} from './components/AddCategory'\r\nimport {GrifGrid} from './components/GifGrid'\r\n\r\nexport const GifApp = () => {\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n    return(\r\n        <>\r\n            <h2>GifApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr /> \r\n            <button>Add</button>\r\n            <ol>\r\n                {\r\n                    categories.map(category => \r\n                    <GrifGrid\r\n                        key={category}\r\n                        category={category} \r\n                    />)\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  { GifApp } from './GifApp';\nimport './index.css';\n\nReactDOM.render( \n    <GifApp />,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}